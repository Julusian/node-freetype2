name: NodeCI

on:
  push:
    # tags:
    #   - v*

jobs:
  build-and-test:
    name: Build ${{ matrix.arch }} on ${{ matrix.os }} ${{ matrix.libc }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          # windows
          - os: windows-2019
            arch: x64
          - os: windows-2019
            arch: ia32
            node-arch: x86
          # macos
          - os: macos-11
            arch: arm64
            skip-tests: true
          - os: macos-10.15
            arch: x64
          # linux
          - os: ubuntu-18.04
            arch: x64
          # linux-libc
          - os: ubuntu-latest
            arch: arm64
            docker-arch: linux/arm64
            docker-image: node:14-buster
          - os: ubuntu-latest
            arch: arm
            docker-arch: linux/arm/v7
            docker-image: node:14-buster
          # linux-musl
          - os: ubuntu-latest
            arch: x64
            docker-arch: linux/amd64
            docker-image: node:14-alpine
            libc: musl

    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Use Node.js 14.x
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
          architecture: ${{ matrix.node-arch }}

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 6

      - name: rebuild
        if: ${{ !matrix.docker-arch }}
        shell: bash
        run: |
          pnpm i

          pnpm prebuild2 -- --napi --arch=${{ matrix.arch }}

          if [ -z "${{ matrix.skip-tests }}" ]; then
            pnpm test
          fi

        env:
          CI: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        if: matrix.docker-arch
      - name: rebuild (in docker)
        uses: addnab/docker-run-action@v3
        if: matrix.docker-arch
        with:
          image: ${{ matrix.docker-image }}
          # shell: bash
          options: --platform=${{ matrix.docker-arch }} -v ${{ github.workspace }}:/work -e CI=1 
          run: |
            if command -v apt-get &> /dev/null
            then
              apt-get update
              apt-get install -y python3
            elif command -v apk &> /dev/null
            then
              apk update
              apk add make g++ gcc python3
            fi

            cd /work

            corepack enable
            pnpm install -g node-gyp

            pnpm i
            pnpm prebuild2 -- --napi --arch=${{ matrix.arch }}

            pnpm test

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}-${{ matrix.arch }}-${{ matrix.libc }}-prebuilds
          path: prebuilds
          retention-days: 1

  bundle:
    name: Bundle prebuilds
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: tmp

      - name: Display structure of downloaded files
        run: |
          mkdir prebuilds
          cp -R tmp/*/* prebuilds/

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: all-prebuilds
          path: prebuilds
          retention-days: 7
